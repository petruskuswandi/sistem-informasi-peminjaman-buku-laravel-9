/*!
 * codebase - v4.0.0
 * @author pixelcave - https://pixelcave.com
 * Copyright (c) 2020
 */
! function() {
    function e(e, r) {
        for (var n = 0; n < r.length; n++) {
            var s = r[n];
            s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(e, s.key, s)
        }
    }
    var r = function() {
        function r() {
            ! function(e, r) {
                if (!(e instanceof r)) throw new TypeError("Cannot call a class as a function")
            }(this, r)
        }
        var n, s;
        return n = r, s = [{
            key: "initValidationSignUp",
            value: function() {
                jQuery(".js-validation-signup").validate({
                    errorClass: "invalid-feedback animated fadeInDown",
                    errorElement: "div",
                    errorPlacement: function(e, r) {
                        jQuery(r).parents(".form-group > div").append(e)
                    },
                    highlight: function(e) {
                        jQuery(e).closest(".form-group").removeClass("is-invalid").addClass("is-invalid")
                    },
                    success: function(e) {
                        jQuery(e).closest(".form-group").removeClass("is-invalid"), jQuery(e).remove()
                    },
                    rules: {
                        "username": {
                            required: !0,
                            minlength: 3
                        },
                        "email": {
                            required: !0,
                            email: !0
                        },
                        "password": {
                            required: !0,
                            minlength: 5
                        },
                        "password-confirm": {
                            required: !0,
                            equalTo: "#password"
                        },
                        "terms": {
                            required: !0
                        },
                        "phone": {
                            required: !0,
                            minlength: 10,
                            maxlength:15
                        },
                        "address": {
                            required: !0,
                            minlength: 5
                        }
                    },
                    messages: {
                        "username": {
                            required: "Please enter a username",
                            minlength: "Your username must consist of at least 3 characters"
                        },
                        "email": "Please enter a valid email address",
                        "password": {
                            required: "Please provide a password",
                            minlength: "Your password must be at least 5 characters long"
                        },
                        "password-confirm": {
                            required: "Please provide a password",
                            minlength: "Your password must be at least 5 characters long",
                            equalTo: "Please enter the same password as above"
                        },
                        "terms": "You must agree to the service terms!",
                        "phone": {
                            required: "Please enter a phone number",
                            minlength: "Your phone number must be at least 10 characters",
                            maxlength: "Your phone number must be at most 15 characters"
                        },
                        "address": {
                            required: "Please enter an address",
                            minlength: "Your address must be at least 5 characters"
                        }
                    }
                })
            }
        }, {
            key: "init",
            value: function() {
                this.initValidationSignUp()
            }
        }], null && e(n.prototype, null), s && e(n, s), r
    }();
    jQuery((function() {
        r.init()
    }))
}();
